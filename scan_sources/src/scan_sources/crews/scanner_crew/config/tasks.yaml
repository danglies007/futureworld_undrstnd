prepare_research_plan:
  description: >
    Process the initial user inputs: {initial_inputs}.
    Load default keywords and sources from the Pydantic models.
    Combine with user inputs to formulate a draft research plan including target market,
    industry, keywords, time horizon, and sources configuration, considering uploaded files.
  expected_output: >
    A structured dictionary or JSON string representing the draft research plan,
    ready for user review. Include validated lists of keywords, sources (grouped by type),
    target market, target industry, time horizon, and paths to any uploaded files.
  agent: ConfigurationSpecialist

review_research_plan:
  description: >
    Present the draft Research Plan from the previous task to the user:
    '''
    {plan_details}
    '''
    Ask the user to review the keywords, sources, market, industry, and time horizon.
    Capture their confirmation or requested modifications.
  expected_output: >
    The final, user-confirmed or modified Research Plan as a structured dictionary or JSON string.
    If the user requests modifications, incorporate them into the final plan.
  agent: ResearchManager
  human_input: true
  context: # Depends on prepare_research_plan
    - prepare_research_plan

scan_web_sources:
  description: >
    Execute web scanning based on the confirmed Research Plan: {confirmed_plan}.
    Use the configured web search and scraping tools to find information related to
    the keywords for the specified industry and market across the defined web sources.
    Focus on extracting relevant text snippets and associated metadata (source name, URL, date if available).
  expected_output: >
    A list of 'SourceFinding' objects (or dictionaries) containing extracted text snippets,
    source names, URLs, source type ('Web'), publication dates (if found), matched keywords,
    and scope context from web sources. Return an empty list if no relevant information is found.
  agent: WebSourceAnalyst
  # Tools assigned in crew.py
  context: # Depends on review_research_plan
    - review_research_plan
  async_execution: true

scan_document_sources:
  description: >
    Execute document scanning based on the confirmed Research Plan: {confirmed_plan}.
    Use the configured PDF and file reading tools to find information related to the keywords
    within the specified PDF URLs (if applicable and supported by tools) and uploaded files.
    Extract relevant text snippets and associated metadata (filename, source type, date if available).
  expected_output: >
    A list of 'SourceFinding' objects (or dictionaries) containing extracted text snippets,
    source names (filenames), source type ('Document' or 'Uploaded'), publication dates (if found),
    matched keywords, and scope context from document sources. Return an empty list if no files were provided or no relevant info found.
  agent: DocumentSourceAnalyst
  # Tools assigned in crew.py
  context: # Depends on review_research_plan
    - review_research_plan
  async_execution: true

synthesize_findings:
  description: >
    Aggregate and analyze the raw findings from web scanning (task: scan_web_sources)
    and document scanning (task: scan_document_sources).
    Deduplicate entries, cluster similar points, and identify distinct market forces/trends/signals relevant to the research plan's scope and time horizon.
    For each identified force, synthesize a concise name, a detailed description, list associated keywords,
    scope, time horizon relevance, and link the key supporting source snippets/references (preserving metadata from SourceFinding).
  expected_output: >
    A structured list of preliminary 'IdentifiedForce' objects (or dictionaries)
    representing the synthesized market forces, including names, descriptions,
    keywords, scope, time horizon, and supporting source evidence (list of SourceFinding objects),
    ready for user review.
  agent: DataSynthesizer
  context: # Depends on both scanning tasks
    - scan_web_sources
    - scan_document_sources

review_preliminary_findings:
  description: >
    Present the Preliminary Findings (synthesized data from task: synthesize_findings) to the user.
    Display the list of identified forces/trends with their names and descriptions.
    Ask the user to review for relevance, accuracy, and completeness.
    Capture feedback or approval.
  expected_output: >
    The final list of 'IdentifiedForce' objects (or dictionaries), potentially refined based on user feedback,
    along with a confirmation signal or summary of feedback.
  agent: ResearchManager
  human_input: true
  context: # Depends on synthesis
    - synthesize_findings

generate_outputs:
  description: >
    Based on the final, reviewed synthesized findings (task: review_preliminary_findings),
    generate the required outputs.
    1. Create the final list of Pydantic `IdentifiedForce` objects.
    2. Format a detailed Markdown table summarizing each force (Name, Description, Keywords, Scope, Time Horizon, Key Sources).
    3. Compose a structured Markdown narrative report summarizing key themes, insights, and context, referencing the identified forces.
  expected_output: >
    A final 'MarketForceOutput' Pydantic object containing the list of 'IdentifiedForce' objects,
    the Markdown table string, and the Markdown report string.
  agent: ReportWriter
  context: # Depends on final review
    - review_preliminary_findings
